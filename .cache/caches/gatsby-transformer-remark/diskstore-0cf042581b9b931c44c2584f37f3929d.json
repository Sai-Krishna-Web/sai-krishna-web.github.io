{"expireTime":9007200844623080000,"key":"transformer-remark-markdown-html-ast-f8dddb2446fb988702546e029ef173de-gatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{"id":"types-of-array-cloning","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#types-of-array-cloning","aria-label":"types of array cloning permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Types of array cloning","position":{"start":{"line":2,"column":3,"offset":4},"end":{"line":2,"column":25,"offset":26}}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":25,"offset":26}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are 2 types of array cloning: shallow & deep. Shallow copies only cover the 1st level of the array and the rest are referenced. If you want a true copy of nested arrays, youâ€™ll need a deep clone. For deep clones, go with the JSON way OR better yet use Lodash","position":{"start":{"line":4,"column":1,"offset":30},"end":{"line":4,"column":265,"offset":294}}}],"position":{"start":{"line":4,"column":1,"offset":30},"end":{"line":4,"column":265,"offset":294}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Using JavaScript</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Using Lodash</span>\n_<span class=\"token punctuation\">.</span><span class=\"token function\">cloneDeep</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":6,"column":1,"offset":298},"end":{"line":14,"column":4,"offset":459}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"arrays-are-reference-types","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#arrays-are-reference-types","aria-label":"arrays are reference types permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Arrays are Reference Types","position":{"start":{"line":16,"column":4,"offset":466},"end":{"line":16,"column":30,"offset":492}}}],"position":{"start":{"line":16,"column":1,"offset":463},"end":{"line":16,"column":30,"offset":492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In order to understand why there are two types of cloning. Let's dig into the fundamentals and explains what are reference types.","position":{"start":{"line":18,"column":1,"offset":496},"end":{"line":18,"column":130,"offset":625}}}],"position":{"start":{"line":18,"column":1,"offset":496},"end":{"line":18,"column":130,"offset":625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Unlike your primitive types (ie. number or string), arrays are reference types. Which means when you assign an array to a variable, you're assigning a memory address and not the actual array itself. I know this is a bit confusing. So let's explain with an example.","position":{"start":{"line":20,"column":1,"offset":629},"end":{"line":20,"column":265,"offset":893}}}],"position":{"start":{"line":20,"column":1,"offset":629},"end":{"line":20,"column":265,"offset":893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"copying-a-value-type","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#copying-a-value-type","aria-label":"copying a value type permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Copying a Value type","position":{"start":{"line":22,"column":5,"offset":901},"end":{"line":22,"column":25,"offset":921}}}],"position":{"start":{"line":22,"column":1,"offset":897},"end":{"line":22,"column":26,"offset":922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So no biggie here. We're creating a copy of ","position":{"start":{"line":24,"column":1,"offset":926},"end":{"line":24,"column":45,"offset":970}}},{"type":"raw","value":"<code class=\"language-text\">value</code>","position":{"start":{"line":24,"column":45,"offset":970},"end":{"line":24,"column":52,"offset":977}}},{"type":"text","value":". And if we change the ","position":{"start":{"line":24,"column":52,"offset":977},"end":{"line":24,"column":75,"offset":1000}}},{"type":"raw","value":"<code class=\"language-text\">valueCopy</code>","position":{"start":{"line":24,"column":75,"offset":1000},"end":{"line":24,"column":86,"offset":1011}}},{"type":"text","value":", it doesn't affect the original ","position":{"start":{"line":24,"column":86,"offset":1011},"end":{"line":24,"column":119,"offset":1044}}},{"type":"raw","value":"<code class=\"language-text\">value</code>","position":{"start":{"line":24,"column":119,"offset":1044},"end":{"line":24,"column":126,"offset":1051}}},{"type":"text","value":". Makes sense - when we change the copy it shouldn't affect the original at all. All good here.","position":{"start":{"line":24,"column":126,"offset":1051},"end":{"line":24,"column":221,"offset":1146}}}],"position":{"start":{"line":24,"column":1,"offset":926},"end":{"line":24,"column":221,"offset":1146}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> valueCopy <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span> <span class=\"token comment\">// create copy</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>valueCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\n\n<span class=\"token comment\">// Change valueCopy</span>\nvalueCopy <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>valueCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 100</span>\n\n<span class=\"token comment\">// Original NOT affected </span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":26,"column":1,"offset":1150},"end":{"line":38,"column":4,"offset":1382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"copying-a-reference-type","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#copying-a-reference-type","aria-label":"copying a reference type permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Copying a Reference type","position":{"start":{"line":40,"column":5,"offset":1390},"end":{"line":40,"column":29,"offset":1414}}}],"position":{"start":{"line":40,"column":1,"offset":1386},"end":{"line":40,"column":30,"offset":1415}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Okay, things are about to get weird now. Let's copy our array using the same method as we did to copy a value type.","position":{"start":{"line":42,"column":1,"offset":1419},"end":{"line":42,"column":116,"offset":1534}}}],"position":{"start":{"line":42,"column":1,"offset":1419},"end":{"line":42,"column":116,"offset":1534}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> arrayCopy <span class=\"token operator\">=</span> array<span class=\"token punctuation\">;</span> <span class=\"token comment\">// create copy</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arrayCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1,2,3];</span>\n\n<span class=\"token comment\">// Change 1st element of the array</span>\narrayCopy<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'sai'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arrayCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'sai', 2, 3 ]</span>\n\n<span class=\"token comment\">// Original got affected</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'sai', 2, 3 ]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":44,"column":1,"offset":1538},"end":{"line":56,"column":4,"offset":1829}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Why did the original array also got affected? That's because what you copied over is not the array itself but the pointer to the memory space the array occupies. Reference types don't hold values, they are a pointer to the value in memory.","position":{"start":{"line":58,"column":1,"offset":1833},"end":{"line":58,"column":240,"offset":2072}}}],"position":{"start":{"line":58,"column":1,"offset":1833},"end":{"line":58,"column":240,"offset":2072}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution to Copying Reference Types","position":{"start":{"line":60,"column":3,"offset":2078},"end":{"line":60,"column":38,"offset":2113}}}],"position":{"start":{"line":60,"column":1,"offset":2076},"end":{"line":60,"column":40,"offset":2115}}}],"position":{"start":{"line":60,"column":1,"offset":2076},"end":{"line":60,"column":40,"offset":2115}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So the solution is to copy over the value NOT the pointer. Like this:","position":{"start":{"line":62,"column":1,"offset":2119},"end":{"line":62,"column":70,"offset":2188}}}],"position":{"start":{"line":62,"column":1,"offset":2119},"end":{"line":62,"column":70,"offset":2188}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> arrayCopy <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>array<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// create TRUE copy</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arrayCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1,2,3];</span>\n\n<span class=\"token comment\">// Change 1st element of the array</span>\narrayCopy<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'sai'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arrayCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'sai', 2, 3 ]</span>\n\n<span class=\"token comment\">// Original NOT affected </span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 1, 2, 3 ]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":64,"column":1,"offset":2192},"end":{"line":76,"column":4,"offset":2490}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"shallow-vs-deep-clone","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#shallow-vs-deep-clone","aria-label":"shallow vs deep clone permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Shallow vs Deep Clone","position":{"start":{"line":78,"column":5,"offset":2498},"end":{"line":78,"column":26,"offset":2519}}}],"position":{"start":{"line":78,"column":1,"offset":2494},"end":{"line":78,"column":26,"offset":2519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When I used spread ","position":{"start":{"line":80,"column":1,"offset":2523},"end":{"line":80,"column":20,"offset":2542}}},{"type":"raw","value":"<code class=\"language-text\">...</code>","position":{"start":{"line":80,"column":20,"offset":2542},"end":{"line":80,"column":25,"offset":2547}}},{"type":"text","value":" to copy an array, I'm only creating a shallow copy. If the array is nested or multi-dimensional, it won't work. Let's take a look:","position":{"start":{"line":80,"column":25,"offset":2547},"end":{"line":80,"column":156,"offset":2678}}}],"position":{"start":{"line":80,"column":1,"offset":2523},"end":{"line":80,"column":156,"offset":2678}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> nestedArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> arrayCopy <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>nestedArray<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \n\n<span class=\"token comment\">// Make some changes</span>\narrayCopy<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'sai'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// change shallow element</span>\narrayCopy<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'krishna'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// change nested element</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arrayCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'sai', [ 'krishna' ], 3 ]</span>\n\n<span class=\"token comment\">// Nested array got affected</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nestedArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 1, [ 'krishna' ], 3 ]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":82,"column":1,"offset":2682},"end":{"line":93,"column":4,"offset":3038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you can see, the shallow or first layer is fine. However, once we change the nested element, the original array also got affected. So the solution is to do a deep clone:","position":{"start":{"line":95,"column":1,"offset":3042},"end":{"line":95,"column":173,"offset":3214}}}],"position":{"start":{"line":95,"column":1,"offset":3042},"end":{"line":95,"column":173,"offset":3214}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> nestedArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> arrayCopy <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>nestedArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n<span class=\"token comment\">// Make some changes</span>\narrayCopy<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'sai'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// change shallow element</span>\narrayCopy<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'krishna'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// change nested element</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arrayCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'sai', [ 'krishna' ], 3 ]</span>\n\n<span class=\"token comment\">// Nested array NOT affected</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nestedArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//  1, [ 2 ], 3 ]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":97,"column":1,"offset":3218},"end":{"line":108,"column":4,"offset":3588}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":109,"column":1,"offset":3590}}}}