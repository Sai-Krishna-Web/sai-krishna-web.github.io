{"expireTime":9007200844623027000,"key":"transformer-remark-markdown-html-ast-f0e978acd8b6bc38024a1729b18a417c-gatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"clone-an-array-using-es6","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#clone-an-array-using-es6","aria-label":"clone an array using es6 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Clone an Array using ES6","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":28,"offset":27}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":28,"offset":27}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When we need to copy an array, we often times used slice. But with ES6, you can also use the spread operator to duplicate an array.","position":{"start":{"line":3,"column":1,"offset":31},"end":{"line":3,"column":132,"offset":162}}}],"position":{"start":{"line":3,"column":1,"offset":31},"end":{"line":3,"column":132,"offset":162}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Objs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'obj1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'obj2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'obj3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Old way</span>\n<span class=\"token keyword\">const</span> cloneObjs <span class=\"token operator\">=</span> Objs<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ES6 way</span>\n<span class=\"token keyword\">const</span> cloneObjsES6 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>Objs<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":4,"column":1,"offset":164},"end":{"line":10,"column":4,"offset":312}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"why-cant-i-use--to-copy-an-array","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#why-cant-i-use--to-copy-an-array","aria-label":"why cant i use  to copy an array permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Why Canâ€™t I Use ","position":{"start":{"line":11,"column":4,"offset":317},"end":{"line":11,"column":20,"offset":333}}},{"type":"raw","value":"<code class=\"language-text\">=</code>","position":{"start":{"line":11,"column":20,"offset":333},"end":{"line":11,"column":23,"offset":336}}},{"type":"text","value":" to Copy an Array?","position":{"start":{"line":11,"column":23,"offset":336},"end":{"line":11,"column":41,"offset":354}}}],"position":{"start":{"line":11,"column":1,"offset":314},"end":{"line":11,"column":41,"offset":354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Because arrays in JS are reference values, so when you try to copy it using the ","position":{"start":{"line":13,"column":1,"offset":358},"end":{"line":13,"column":81,"offset":438}}},{"type":"raw","value":"<code class=\"language-text\">=</code>","position":{"start":{"line":13,"column":81,"offset":438},"end":{"line":13,"column":84,"offset":441}}},{"type":"text","value":" it will only copy the reference to the original array and not the value of the array. To create a real copy of an array, you need to copy over the value of the array under a new value variable. That way this new array does not reference to the old array address in memory.","position":{"start":{"line":13,"column":84,"offset":441},"end":{"line":13,"column":357,"offset":714}}}],"position":{"start":{"line":13,"column":1,"offset":358},"end":{"line":13,"column":357,"offset":714}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Objs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Obj1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Obj1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Obj3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> fakeObjs <span class=\"token operator\">=</span> Objs<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cloneObjs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>Objs<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Objs <span class=\"token operator\">===</span> fakeObjs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// true --> it's pointing to the same memory space</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Objs <span class=\"token operator\">===</span> cloneObjs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// false --> it's pointing to a new memory space</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":15,"column":1,"offset":718},"end":{"line":26,"column":4,"offset":1005}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"problem-with-reference-values","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#problem-with-reference-values","aria-label":"problem with reference values permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Problem with Reference Values","position":{"start":{"line":28,"column":4,"offset":1012},"end":{"line":28,"column":33,"offset":1041}}}],"position":{"start":{"line":28,"column":1,"offset":1009},"end":{"line":28,"column":33,"offset":1041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you ever dealt with Redux or any state management framework. You will know immutability is super important. Let me briefly explain. An immutable object is an object where the state can't be modified after it is created. The problem with JavaScript is that ","position":{"start":{"line":30,"column":1,"offset":1045},"end":{"line":30,"column":260,"offset":1304}}},{"type":"raw","value":"<code class=\"language-text\">arrays</code>","position":{"start":{"line":30,"column":260,"offset":1304},"end":{"line":30,"column":268,"offset":1312}}},{"type":"text","value":" are mutable. So this can happen:","position":{"start":{"line":30,"column":268,"offset":1312},"end":{"line":30,"column":301,"offset":1345}}}],"position":{"start":{"line":30,"column":1,"offset":1045},"end":{"line":30,"column":301,"offset":1345}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Objs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Obj1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Obj2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Objs2 <span class=\"token operator\">=</span> Objs<span class=\"token punctuation\">;</span>\n\nObjs2<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Obj3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Objs2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [ 'Obj1', 'Obj2', 'Obj3' ]</span>\n\n<span class=\"token comment\">//Our original Objs have changed?!</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Objs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [ 'Obj1', 'Obj2', 'Obj3' ]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":32,"column":1,"offset":1349},"end":{"line":45,"column":4,"offset":1588}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"That's why we need to clone an array:","position":{"start":{"line":47,"column":1,"offset":1592},"end":{"line":47,"column":38,"offset":1629}}}],"position":{"start":{"line":47,"column":1,"offset":1592},"end":{"line":47,"column":38,"offset":1629}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Objs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Obj1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Obj2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Objs2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>Objs<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Let's change our Objs2 array</span>\nObjs2<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Obj3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Objs2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [ 'Obj1', 'Obj2', 'Obj3' ]</span>\n\n<span class=\"token comment\">// our original Objs is not affected!</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Objs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [ 'Obj1', 'Obj2' ]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":49,"column":1,"offset":1633},"end":{"line":62,"column":4,"offset":1903}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"mutable-vs-immutable-data-types","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#mutable-vs-immutable-data-types","aria-label":"mutable vs immutable data types permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Mutable vs Immutable Data Types","position":{"start":{"line":64,"column":4,"offset":1910},"end":{"line":64,"column":35,"offset":1941}}}],"position":{"start":{"line":64,"column":1,"offset":1907},"end":{"line":64,"column":35,"offset":1941}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Mutable:","position":{"start":{"line":66,"column":1,"offset":1945},"end":{"line":66,"column":9,"offset":1953}}}],"position":{"start":{"line":66,"column":1,"offset":1945},"end":{"line":66,"column":9,"offset":1953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"object","position":{"start":{"line":67,"column":3,"offset":1957},"end":{"line":67,"column":9,"offset":1963}}}],"position":{"start":{"line":67,"column":1,"offset":1955},"end":{"line":67,"column":9,"offset":1963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"array","position":{"start":{"line":68,"column":3,"offset":1967},"end":{"line":68,"column":8,"offset":1972}}}],"position":{"start":{"line":68,"column":1,"offset":1965},"end":{"line":68,"column":8,"offset":1972}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"function","position":{"start":{"line":69,"column":3,"offset":1976},"end":{"line":69,"column":11,"offset":1984}}}],"position":{"start":{"line":69,"column":1,"offset":1974},"end":{"line":69,"column":11,"offset":1984}}},{"type":"text","value":"\n"}],"position":{"start":{"line":67,"column":1,"offset":1955},"end":{"line":69,"column":11,"offset":1984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Immutable:\nAll primitives are immutable.","position":{"start":{"line":71,"column":1,"offset":1988},"end":{"line":72,"column":30,"offset":2029}}}],"position":{"start":{"line":71,"column":1,"offset":1988},"end":{"line":72,"column":30,"offset":2029}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"string","position":{"start":{"line":73,"column":3,"offset":2033},"end":{"line":73,"column":9,"offset":2039}}}],"position":{"start":{"line":73,"column":1,"offset":2031},"end":{"line":73,"column":9,"offset":2039}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"number","position":{"start":{"line":74,"column":3,"offset":2043},"end":{"line":74,"column":9,"offset":2049}}}],"position":{"start":{"line":74,"column":1,"offset":2041},"end":{"line":74,"column":9,"offset":2049}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"boolean","position":{"start":{"line":75,"column":3,"offset":2053},"end":{"line":75,"column":10,"offset":2060}}}],"position":{"start":{"line":75,"column":1,"offset":2051},"end":{"line":75,"column":10,"offset":2060}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"null","position":{"start":{"line":76,"column":3,"offset":2064},"end":{"line":76,"column":7,"offset":2068}}}],"position":{"start":{"line":76,"column":1,"offset":2062},"end":{"line":76,"column":7,"offset":2068}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"undefined","position":{"start":{"line":77,"column":3,"offset":2072},"end":{"line":77,"column":12,"offset":2081}}}],"position":{"start":{"line":77,"column":1,"offset":2070},"end":{"line":77,"column":12,"offset":2081}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"symbol","position":{"start":{"line":78,"column":3,"offset":2085},"end":{"line":78,"column":9,"offset":2091}}}],"position":{"start":{"line":78,"column":1,"offset":2083},"end":{"line":78,"column":9,"offset":2091}}},{"type":"text","value":"\n"}],"position":{"start":{"line":73,"column":1,"offset":2031},"end":{"line":78,"column":9,"offset":2091}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"shallow-copy-only","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#shallow-copy-only","aria-label":"shallow copy only permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Shallow Copy Only","position":{"start":{"line":80,"column":4,"offset":2098},"end":{"line":80,"column":21,"offset":2115}}}],"position":{"start":{"line":80,"column":1,"offset":2095},"end":{"line":80,"column":21,"offset":2115}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please note ","position":{"start":{"line":82,"column":1,"offset":2119},"end":{"line":82,"column":13,"offset":2131}}},{"type":"raw","value":"<code class=\"language-text\">spread</code>","position":{"start":{"line":82,"column":13,"offset":2131},"end":{"line":82,"column":21,"offset":2139}}},{"type":"text","value":" only goes one level deep when copying an array. So if you're trying to copy a multi-dimensional arrays, you will have to use other alternatives.","position":{"start":{"line":82,"column":21,"offset":2139},"end":{"line":82,"column":166,"offset":2284}}}],"position":{"start":{"line":82,"column":1,"offset":2119},"end":{"line":82,"column":166,"offset":2284}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cloneNums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>nums<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Let's change the first item in the first nested item in our cloned array.</span>\ncloneNums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>cloneNums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [ [ 0, 2 ], [ 3 ] ]</span>\n\n<span class=\"token comment\">// NOOooo, the original is also affected</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [ [ 0, 2 ], [ 3 ] ]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":84,"column":1,"offset":2288},"end":{"line":98,"column":4,"offset":2608}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Shallow copy means the first level is copied, deeper levels are ","position":{"start":{"line":100,"column":1,"offset":2612},"end":{"line":100,"column":65,"offset":2676}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"referenced","position":{"start":{"line":100,"column":67,"offset":2678},"end":{"line":100,"column":77,"offset":2688}}}],"position":{"start":{"line":100,"column":65,"offset":2676},"end":{"line":100,"column":79,"offset":2690}}},{"type":"text","value":".","position":{"start":{"line":100,"column":79,"offset":2690},"end":{"line":100,"column":80,"offset":2691}}}],"position":{"start":{"line":100,"column":1,"offset":2612},"end":{"line":100,"column":80,"offset":2691}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"community-input","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#community-input","aria-label":"community input permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Community Input","position":{"start":{"line":102,"column":4,"offset":2698},"end":{"line":102,"column":19,"offset":2713}}}],"position":{"start":{"line":102,"column":1,"offset":2695},"end":{"line":102,"column":19,"offset":2713}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"arrayfrom-is-another-way-to-clone-array","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#arrayfrom-is-another-way-to-clone-array","aria-label":"arrayfrom is another way to clone array permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"raw","value":"<code class=\"language-text\">Array.from</code>","position":{"start":{"line":104,"column":5,"offset":2721},"end":{"line":104,"column":17,"offset":2733}}},{"type":"text","value":" is Another Way to Clone Array","position":{"start":{"line":104,"column":17,"offset":2733},"end":{"line":104,"column":47,"offset":2763}}}],"position":{"start":{"line":104,"column":1,"offset":2717},"end":{"line":104,"column":47,"offset":2763}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Objs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Obj1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Obj2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Obj3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cloneObjs <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>Objs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":106,"column":1,"offset":2767},"end":{"line":110,"column":4,"offset":2864}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":111,"column":1,"offset":2866}}}}