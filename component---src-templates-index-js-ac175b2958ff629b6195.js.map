{"version":3,"sources":["webpack:///./src/components/Sidebar/Friend/index.js","webpack:///./src/components/Sidebar/LatestPost/index.js","webpack:///./src/components/Sidebar/Information/index.js","webpack:///./src/components/Sidebar/index.js","webpack:///./src/components/Tag/index.js","webpack:///./src/api/index.js","webpack:///./src/templates/index.js","webpack:///./src/components/ShareBox/index.js","webpack:///./src/components/ExternalLink/index.js","webpack:///./src/components/Card/index.js","webpack:///./src/api/images.js"],"names":["config","friends","Friend","className","map","friend","ExternalLink","href","title","key","rel","LatestPost","posts","node","to","frontmatter","url","slug","fields","Information","totalCount","defaultProps","wordings","githubUsername","twitterUsername","linkedinUsername","email","iconUrl","about","facebook","Icon","icon","target","Sidebar","latestPosts","src","alt","query","render","data","all","limited","Tag","name","count","isBrowser","maxPostsInPage","window","parseDate","date","dayjs","format","NavLinkText","color","text","style","NavLink","test","Page","pageContext","location","group","index","first","last","pathPrefix","previousUrl","nextUrl","Fragment","marginTop","justifyContent","marginBottom","hasCommentBox","ShareBox","onClick","ReactGA","event","category","action","lineHeight","paddingLeft","CardHeader","headerImage","image","backgroundColor","tags","backgroundImage","parseImgur","Card","headerBackgroundColor","description","rawImage","size","match","resizedImage","replace","small","medium","large","huge","parseImageTag","parseTitle","module","exports","getGalleryImage"],"mappings":"mOAQyBA,SAAjBC,gB,MAAU,G,EAgBHC,EAdA,kBACb,yBAAKC,UAAU,UACb,oCACCF,EAAQG,KAAI,SAAAC,GAAM,OACjB,kBAACC,EAAA,EAAD,CACEC,KAAMF,EAAOE,KACbC,MAAOH,EAAOG,MACdC,IAAKJ,EAAOG,MACZE,IAAI,kBCQGC,G,UAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjB,yBAAKT,UAAU,eACb,8CACCS,EAAMR,KAAI,gBAAGS,EAAH,EAAGA,KAAH,OACT,kBAAC,OAAD,CACEC,GAAID,EAAKE,YAAYC,KAAOH,EAAKE,YAAYE,MAAQJ,EAAKK,OAAOD,KACjER,IAAKI,EAAKE,YAAYC,KAAOH,EAAKE,YAAYE,MAAQJ,EAAKK,OAAOD,KAClEV,KAAMM,EAAKE,YAAYC,KAAOH,EAAKE,YAAYE,MAAQJ,EAAKK,OAAOD,MAElEJ,EAAKE,YAAYP,aCPpBW,G,UAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYR,EAAf,EAAeA,MAAf,OAClB,yBAAKT,UAAU,sCACb,6BACA,oCAEGiB,EAFH,YAKA,6BACA,kBAAC,EAAD,CAAYR,MAAOA,IACnB,6BACA,kBAAC,EAAD,SASJO,EAAYE,aAAe,CACzBT,MAAO,IAGMO,Q,aCbXnB,SARFsB,iB,MAAW,G,EACXC,EAOEvB,SAPFuB,eACAC,EAMExB,SANFwB,gBACAC,EAKEzB,SALFyB,iBACAC,EAIE1B,SAJF0B,MACAC,EAGE3B,SAHF2B,QACAC,EAEE5B,SAFF4B,MACAC,EACE7B,SADF6B,SAGIC,EAAO,SAAC,GAAD,IAAGvB,EAAH,EAAGA,KAAMwB,EAAT,EAASA,KAAT,OACX,uBACEC,OAAO,SACPzB,KAAMA,EACNG,IAAI,wCACJP,UAAU,eAEV,0BAAMA,UAAU,yBACd,kBAAC,IAAD,CAAiB4B,KAAMA,OAKvBE,EAAU,SAAC,GAAD,IAAGb,EAAH,EAAGA,WAAYc,EAAf,EAAeA,YAAf,OACd,4BAAQ/B,UAAU,6FAChB,yBAAKA,UAAU,YACb,kBAAC,OAAD,CAAMW,GAAIc,EAAOrB,KAAMqB,EAAOzB,UAAU,QACtC,yBAAKA,UAAU,SAASgC,IAAKR,EAASS,IAAI,eAC1C,4CAEF,uBAAGjC,UAAU,QAAQmB,EAAS,IAC9B,uBAAGnB,UAAU,iBAAiBmB,EAAS,IAGvC,kBAAC,EAAD,CACEf,KAAI,sBAAwBgB,EAC5BQ,KAAM,CAAC,MAAO,YAEhB,kBAAC,EAAD,CACExB,KAAI,+BAAiCkB,EACrCM,KAAM,CAAC,MAAO,cAEhB,kBAAC,EAAD,CACExB,KAAI,uBAAyBiB,EAC7BO,KAAM,CAAC,MAAO,aAEhB,kBAAC,EAAD,CAAMxB,KAAI,UAAYmB,EAASK,KAAM,CAAC,MAAO,cAC5CF,GACI,kBAAC,EAAD,CAAMtB,KAAI,4BAA8BsB,EAA9B,IAA2CE,KAAM,CAAC,MAAO,cAExE,kBAAC,EAAD,CAAaX,WAAYA,EAAYR,MAAOsB,OAelDD,EAAQZ,aAAe,CACrBD,WAAY,EACZc,YAAa,IAGA,sBACb,kBAAC,cAAD,CACEG,MAAK,aAiCLC,OAAQ,SAAAC,GAAI,OAAI,kBAAC,EAAD,iBAAaA,EAAKC,IAASD,EAAKE,WAlClD,W,0GC/EIC,EAAM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACV,kBAAC,OAAD,CAAM9B,GAAE,QAAU6B,EAAQpC,KAAI,QAAUoC,EAAQxC,UAAU,eACvDwC,EADH,IAGGC,IASLF,EAAIrB,aAAe,CACjBuB,MAAO,IAGMF,O,+JCfTG,GAHqB7C,SAAnB8C,eAGU,iBAAwB,oBAAXC,SAyBzBC,EAAY,SAAAC,GAAI,OAAIC,IAAMD,GAAME,OAAO,kB,mqECrBvCC,G,UAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OAClB,yBACEnD,UAAU,UACVoD,MAAO,CACLF,UAGDC,KAICE,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMzC,EAAgB,EAAhBA,IAAKsC,EAAW,EAAXA,KAC5B,OAAKG,EAKH,kBAAC,IAAD,CAAM3C,GAAE,GAAKE,GACX,kBAACoC,EAAD,CAAaC,MAAM,UAAUC,KAAMA,KAL9B,kBAACF,EAAD,CAAaC,MAAM,UAAUC,KAAMA,KAsD/BI,UA5CF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAEzBC,EACEF,EADFE,MAAOC,EACLH,EADKG,MAAOC,EACZJ,EADYI,MAAOC,EACnBL,EADmBK,KAAMC,EACzBN,EADyBM,WAGvBC,EAAcJ,EAAQ,GAAM,EAAI,GAAlB,IAA2BG,EAA3B,KAAyCH,EAAQ,GAC/DK,EAAO,IAAOF,EAAP,KAAqBH,EAAQ,GAE1C,OACE,kBAAC,IAAMM,SAAP,KACE,yBACEjE,UAAU,eACVoD,MAAO,CACLc,UAAW,KAGb,kBAAC,IAAD,MACA,yBAAKlE,UAAU,iDACZ0D,EAAMzD,KAAI,gBAAGS,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,iBAAUA,EAAKE,YAAf,CAA4BC,IAAKH,EAAKE,YAAYE,KAAOJ,EAAKE,YAAYE,KAAOJ,EAAKK,OAAOD,KAAMR,IAAKI,EAAKK,OAAOD,WAGtH,yBACEd,UAAU,MACVoD,MAAO,CACLe,eAAgB,eAChBC,aAAc,SAGhB,yBAAKpE,UAAU,gBACb,kBAACqD,EAAD,CAASC,MAAOM,EAAO/C,IAAKkD,EAAaZ,KAAK,cAEhD,yBAAKnD,UAAU,YACb,kBAACqD,EAAD,CAASC,MAAOO,EAAMhD,IAAKmD,EAASb,KAAK,YAI/C,yBAAKnD,UAAU,+BAEjB,kBAAC,IAAD,CAAUa,IAAK4C,EAASrD,KAAMiE,eAAe,O,kCCxEnD,iDA4BMC,GA5BN,UA4BiB,SAAC,GAAD,EAAGzD,IAAH,EAAQwD,cAAR,OACf,yBAAKrE,UAAU,eAkBb,uBACEA,UAAU,eACVI,KAAK,UACLmE,QAAS,WACPC,IAAQC,MAAM,CACZC,SAAU,OACVC,OAAQ,mBAGZvB,MAAO,CACLwB,WAAY,SACZC,YAAa,WAGf,kBAAC,IAAD,CAAiBjD,KAAM,CAAC,MAAO,oBAUrC0C,EAASpD,aAAe,CACtBmD,eAAe,GAGFC,O,yDC3Ef,yBAIMnE,EAAe,SAAC,GAAD,IACnBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MAAOwB,EADM,EACNA,OAAQ7B,EADF,EACEA,UAAWO,EADb,EACaA,IADb,OAGnB,uBAAGH,KAAMA,EAAMG,IAAKA,EAAKsB,OAAQA,EAAQ7B,UAAWA,GACjDK,IAYLF,EAAae,aAAe,CAC1BW,OAAQ,SACR7B,UAAW,GACXO,IAAK,8BAGQJ,O,yDC1Bf,yEAiBM2E,GAjBN,UAiBmB,SAAC,GAAD,EAAGjE,IAAH,IANCkE,EAAa7B,EAMN8B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,gBAAgBC,EAA/B,EAA+BA,KAA/B,OAClB,yBAAKlF,UAAU,mBAAmBoD,OAPf2B,EAOiCC,EAPpB9B,EAO2B+B,EAPhB,CAC1CA,gBAAgB,IAAK/B,EACrBiC,gBAAgB,QAASC,qBAAWL,EAAa,SAAlC,OAMZG,EAAKjF,KAAI,SAAAuC,GAAI,OACJ,kBAAC,IAAD,CAAKA,KAAMA,EAAMlC,IAAKkC,UAO9B6C,EAAO,SAAC,GAAD,IACXhF,EADW,EACXA,MACAyC,EAFW,EAEXA,KACAjC,EAHW,EAGXA,IACAkE,EAJW,EAIXA,YACAO,EALW,EAKXA,sBACAC,EANW,EAMXA,YANW,IAOXL,YAPW,MAOJ,GAPI,SAUX,yBAAKlF,UAAU,uBACb,yBAAKA,UAAU,eACZ+E,GACC,kBAACD,EAAD,CACEjE,IAAKA,EACLmE,MAAOD,EACPE,gBAAiBK,EACjBJ,KAAMA,IAGV,yBAAKlF,UAAU,QACb,yBAAKA,UAAU,WACb,kBAAC,OAAD,CAAMW,GAAIE,EAAKT,KAAMS,GACnB,wBAAIb,UAAU,SAASK,IAEzB,2BAAIkF,GACJ,kBAAC,OAAD,CAAM5E,GAAIE,EAAKT,KAAMS,GAArB,wBAGA,yBAAKb,UAAU,SACnB,0BAAMA,UAAU,QAAQ6C,YAAUC,UA0BxCuC,EAAKnE,aAAe,CAClB6D,YAAa,GACbG,KAAM,GACNpC,KAAM,GACNwC,sBAAuB,GACvBjF,MAAM,IAGOgF,O,2CCrFf,IAEMD,EAAa,SAACI,EAAUC,GAC5B,QAD+C,IAAnBA,MAAO,UAC9BD,EACH,MAAM,kCAcR,GAAIA,EAASE,MAAM,eAEjB,OAAIF,EAASE,MAAM,QACVF,EAEH,uBAAwBA,EAGhC,IAAMG,EAAeH,EAASI,QAAQ,aAAjB,KAnBL,CACd,eAAgB,IAChB,aAAc,IACdC,MAAO,IACPC,OAAQ,IACRC,MAAO,IACPC,KAAM,KAayDP,GAA5C,OAErB,OAAIE,EAAaD,MAAM,QACdC,EAEH,uBAAwBA,GAK1BM,EAAgB,SAAC,GAAD,IAAG7F,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAO8C,EAAhB,EAAgBA,KAAhB,qDAA0EiC,EAC9FhF,EACA,SAFoB,IAFH,SAACC,EAAO8C,GAAR,iBAA2B9C,GAAS8C,GAApC,IAKd+C,CAAW7F,EAAO8C,GAHD,OAUtBgD,EAAOC,QAAU,CACfhB,aACAa,gBACAI,gBARsB,SAAC,GAAD,IAAGjG,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAO8C,EAAhB,EAAgBA,KAAhB,0CAA+DiC,EACrFhF,EACA,QAFsB,KAGlB6F,EAAc,CAAE7F,OAAMC,QAAO8C,SAHX,U","file":"component---src-templates-index-js-ac175b2958ff629b6195.js","sourcesContent":["import React from 'react';\r\n\r\nimport ExternalLink from '../../ExternalLink';\r\n\r\nimport { config } from '../../../../data';\r\n\r\nimport './index.scss';\r\n\r\nconst { friends = [] } = config;\r\n\r\nconst Friend = () => (\r\n  <div className=\"friend\">\r\n    <p>Links</p>\r\n    {friends.map(friend => (\r\n      <ExternalLink\r\n        href={friend.href}\r\n        title={friend.title}\r\n        key={friend.title}\r\n        rel=\"noopener\"\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Friend;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.scss';\r\n\r\nconst LatestPost = ({ posts }) => (\r\n  <div className=\"latest-post\">\r\n    <p>Latest Articles</p>\r\n    {posts.map(({ node }) => (\r\n      <Link\r\n        to={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n        key={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n        href={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n      >\r\n        {node.frontmatter.title}\r\n      </Link>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nLatestPost.propTypes = {\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default LatestPost;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Friend from '../Friend';\r\nimport LatestPost from '../LatestPost';\r\nimport './index.scss';\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst Information = ({ totalCount, posts }) => (\r\n  <div className=\"d-none d-lg-block information my-2\">\r\n    <hr />\r\n    <p>\r\n    Total&nbsp;\r\n      {totalCount}\r\n      &nbsp;Article\r\n    </p>\r\n    <hr />\r\n    <LatestPost posts={posts} />\r\n    <hr />\r\n    <Friend />\r\n  </div>\r\n);\r\n\r\nInformation.propTypes = {\r\n  totalCount: PropTypes.number.isRequired,\r\n  posts: PropTypes.array,\r\n};\r\n\r\nInformation.defaultProps = {\r\n  posts: [],\r\n};\r\n\r\nexport default Information;\r\n","import React from 'react';\r\nimport { Link, StaticQuery, graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { config } from '../../../data';\r\n\r\nimport Information from './Information';\r\n\r\nimport './index.scss';\r\n\r\nconst {\r\n  wordings = [],\r\n  githubUsername,\r\n  twitterUsername,\r\n  linkedinUsername,\r\n  email,\r\n  iconUrl,\r\n  about,\r\n  facebook,\r\n} = config;\r\n\r\nconst Icon = ({ href, icon }) => (\r\n  <a\r\n    target=\"_blank\"\r\n    href={href}\r\n    rel=\"external nofollow noopener noreferrer\"\r\n    className=\"custom-icon\"\r\n  >\r\n    <span className=\"fa-layers fa-fw fa-2x\">\r\n      <FontAwesomeIcon icon={icon} />\r\n    </span>\r\n  </a>\r\n);\r\n\r\nconst Sidebar = ({ totalCount, latestPosts }) => (\r\n  <header className=\"intro-header site-heading text-center col-xl-3 col-lg-3 col-xs-12 order-lg-1 display-none\">\r\n    <div className=\"about-me\">\r\n      <Link to={about} href={about} className=\"name\">\r\n        <img className=\"avatar\" src={iconUrl} alt=\"HeisenBerg\" />\r\n        <h4>Sai Krishna</h4>\r\n      </Link>\r\n      <p className=\"mb-1\">{wordings[1]}</p>\r\n      <p className=\"mb-3 wordings\">{wordings[0]}</p>\r\n      \r\n      \r\n      <Icon\r\n        href={`https://github.com/${githubUsername}`}\r\n        icon={['fab', 'github']}\r\n      />\r\n      <Icon\r\n        href={`https://www.linkedin.com/in/${linkedinUsername}`}\r\n        icon={['fab', 'linkedin']}\r\n      />\r\n      <Icon\r\n        href={`https://twitter.com/${twitterUsername}`}\r\n        icon={['fab', 'twitter']}\r\n      />\r\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\r\n      {facebook\r\n        && <Icon href={`https://www.facebook.com/${facebook}/`} icon={['fab', 'facebook']} />\r\n      }\r\n      <Information totalCount={totalCount} posts={latestPosts} />\r\n    </div>\r\n  </header>\r\n);\r\n\r\nIcon.propTypes = {\r\n  href: PropTypes.string.isRequired,\r\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nSidebar.propTypes = {\r\n  totalCount: PropTypes.number,\r\n  latestPosts: PropTypes.array, //eslint-disable-line\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  totalCount: 0,\r\n  latestPosts: [],\r\n};\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      fragment cardData on MarkdownRemark {\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          id\r\n          title\r\n          url: slug\r\n          date\r\n          tags\r\n          description\r\n          headerImage\r\n        }\r\n      }\r\n\r\n      query SidebarQuery {\r\n        all: allMarkdownRemark {\r\n          totalCount\r\n        }\r\n\r\n        limited: allMarkdownRemark(\r\n          sort: { order: DESC, fields: frontmatter___date }\r\n          limit: 6\r\n        ) {\r\n          latestPosts: edges {\r\n            node {\r\n              ...cardData\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Sidebar {...data.all} {...data.limited} />}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'gatsby';\r\n\r\nconst Tag = ({ name, count }) => (\r\n  <Link to={`/tag/${name}`} href={`/tag/${name}`} className=\"header-tag2\">\r\n    {name}\r\n    &nbsp;\r\n    {count}\r\n  </Link>\r\n);\r\n\r\nTag.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nTag.defaultProps = {\r\n  count: '',\r\n};\r\n\r\nexport default Tag;\r\n","import dayjs from 'dayjs';\r\nimport { config } from '../../data';\r\n\r\nconst { maxPostsInPage } = config;\r\n\r\n// Prevent webpack window problem\r\nconst isBrowser = () => typeof window !== 'undefined';\r\n\r\nconst getPageNumber = () => (isBrowser() ? +window.location.pathname.match(/page[/](\\d)/)[1] : -1);\r\n\r\nconst getCurrentPage = () => {\r\n  if (isBrowser() === true) {\r\n    const str = window.location.pathname;\r\n    if (str.indexOf('page') !== -1) {\r\n      // Return the last pathname in number\r\n      return getPageNumber();\r\n    }\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nconst getPath = () => (isBrowser() ? window.location.pathname : '');\r\n\r\nconst getMaxPages = amount => Math.ceil(amount / maxPostsInPage);\r\n\r\n// Array.fill() is added by trial and error\r\nconst getPages = amount => new Array(amount).fill().map((_, index) => `/page/${index + 1}`);\r\n\r\nconst overflow = () => getCurrentPage() === getMaxPages();\r\n\r\nconst parseDate = date => dayjs(date).format('MMM DD, YYYY');\r\n\r\nconst parseChineseDate = date => dayjs(date).format('DD/MM/YYYY');\r\n\r\nexport {\r\n  isBrowser,\r\n  getCurrentPage,\r\n  getMaxPages,\r\n  getPages,\r\n  overflow,\r\n  parseDate,\r\n  parseChineseDate,\r\n  getPath,\r\n  getPageNumber,\r\n};\r\n","/* eslint react/prop-types: 0 */\r\nimport React from 'react';\r\nimport Link from 'gatsby-link';\r\n\r\nimport Card from '../components/Card';\r\nimport Sidebar from '../components/Sidebar';\r\nimport ShareBox from '../components/ShareBox';\r\n\r\nimport './index.scss';\r\n\r\nconst NavLinkText = ({ color, text }) => (\r\n  <div\r\n    className=\"navlink\"\r\n    style={{\r\n      color,\r\n    }}\r\n  >\r\n    {text}\r\n  </div>\r\n);\r\n\r\nconst NavLink = ({ test, url, text }) => {\r\n  if (!test) {\r\n    return <NavLinkText color=\"#7d7d7d\" text={text} />;\r\n  }\r\n\r\n  return (\r\n    <Link to={`${url}`}>\r\n      <NavLinkText color=\"#66ccff\" text={text} />\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst Page = ({ pageContext, location }) => {\r\n  const {\r\n    group, index, first, last, pathPrefix,\r\n  } = pageContext;\r\n\r\n  const previousUrl = index - 1 === 1 ? '' : `/${pathPrefix}/${index - 1}`;\r\n  const nextUrl = `/${pathPrefix}/${index + 1}`;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className=\"row homepage\"\r\n        style={{\r\n          marginTop: 20,\r\n        }}\r\n      >\r\n        <Sidebar />\r\n        <div className=\"col-xl-6 col-lg-7 col-md-12 col-xs-12 order-2\">\r\n          {group.map(({ node }) => (\r\n            <Card {...node.frontmatter} url={node.frontmatter.slug ? node.frontmatter.slug : node.fields.slug} key={node.fields.slug} />\r\n          ))}\r\n\r\n          <div\r\n            className=\"row\"\r\n            style={{\r\n              justifyContent: 'space-around',\r\n              marginBottom: '20px',\r\n            }}\r\n          >\r\n            <div className=\"previousLink\">\r\n              <NavLink test={!first} url={previousUrl} text=\"Previous\" />\r\n            </div>\r\n            <div className=\"nextLink\">\r\n              <NavLink test={!last} url={nextUrl} text=\"Next\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-2 col-lg-1 order-3\" />\r\n      </div>\r\n      <ShareBox url={location.href} hasCommentBox={false} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ReactGA from 'react-ga';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './index.scss';\r\n\r\n/* const CommentButton = () => (\r\n  <a\r\n    className=\"share-button\"\r\n    style={{\r\n      lineHeight: '1.7rem',\r\n      color: '#337ab7',\r\n      paddingLeft: '0.15rem',\r\n    }}\r\n    href=\"#gitalk-container\"\r\n    onClick={() =>\r\n      ReactGA.event({\r\n        category: 'User',\r\n        action: 'Goto Comment Box',\r\n      })\r\n    }\r\n  >\r\n    <FontAwesomeIcon icon={['far', 'comment']} />\r\n  </a>\r\n); */\r\n\r\nconst ShareBox = ({ url, hasCommentBox }) => (\r\n  <div className=\"m-share-box\">\r\n   {/*  <a\r\n      href={`https://www.facebook.com/sharer/sharer.php?u=${url}`}\r\n      title=\"\"\r\n      className=\"share-button\"\r\n      onClick={() =>\r\n        ReactGA.event({\r\n          category: 'Share',\r\n          action: 'Facebook Share',\r\n        })\r\n      }\r\n    >\r\n      <FontAwesomeIcon icon={['fab', 'facebook-f']} />\r\n    </a>\r\n\r\n    \r\n    {hasCommentBox && <CommentButton />} */}\r\n\r\n    <a\r\n      className=\"share-button\"\r\n      href=\"#header\"\r\n      onClick={() => {\r\n        ReactGA.event({\r\n          category: 'User',\r\n          action: 'Scroll to Top',\r\n        });\r\n      }}\r\n      style={{\r\n        lineHeight: '1.7rem',\r\n        paddingLeft: '0.1rem',\r\n      }}\r\n    >\r\n      <FontAwesomeIcon icon={['fas', 'chevron-up']} />\r\n    </a>\r\n  </div>\r\n);\r\n\r\nShareBox.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  hasCommentBox: PropTypes.bool,\r\n};\r\n\r\nShareBox.defaultProps = {\r\n  hasCommentBox: true,\r\n};\r\n\r\nexport default ShareBox;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ExternalLink = ({\r\n  href, title, target, className, rel,\r\n}) => (\r\n  <a href={href} rel={rel} target={target} className={className}>\r\n    {title}\r\n  </a>\r\n);\r\n\r\nExternalLink.propTypes = {\r\n  href: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  target: PropTypes.string,\r\n  className: PropTypes.string,\r\n  rel: PropTypes.string,\r\n};\r\n\r\nExternalLink.defaultProps = {\r\n  target: '_blank',\r\n  className: '',\r\n  rel: 'external nofollow noopener',\r\n};\r\n\r\nexport default ExternalLink;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Tag from '../Tag';\r\n\r\nimport { parseImgur } from '../../api/images';\r\nimport { parseDate } from '../../api';\r\n\r\nimport './index.scss';\r\n\r\nconst imageStyle = (headerImage, color) => ({\r\n  backgroundColor: `#${color}`,\r\n  backgroundImage: ` url(${parseImgur(headerImage, 'large')})`,\r\n  \r\n});\r\n\r\nconst CardHeader = ({ url, image, backgroundColor,tags }) => (\r\n <div className=\"wrapper tag-wrap\" style={imageStyle(image, backgroundColor)} >\r\n    {tags.map(name => (\r\n              <Tag name={name} key={name} />\r\n            ))}\r\n    </div>\r\n    \r\n\r\n);\r\n\r\nconst Card = ({\r\n  title,\r\n  date,\r\n  url,\r\n  headerImage,\r\n  headerBackgroundColor,\r\n  description,\r\n  tags = [],\r\n}) => (\r\n  \r\n  <div className=\"col-sm-12 pb-4 link\">\r\n    <div className=\"custom-card\">\r\n      {headerImage && (\r\n        <CardHeader\r\n          url={url}\r\n          image={headerImage}\r\n          backgroundColor={headerBackgroundColor}\r\n          tags={tags}\r\n        />\r\n      )}\r\n      <div className=\"data\">\r\n        <div className=\"content\">\r\n          <Link to={url} href={url}>\r\n            <h4 className=\"title\">{title}</h4>\r\n          </Link>\r\n          <p>{description}</p>\r\n          <Link to={url} href={url}>\r\n           ... continue reading\r\n          </Link>\r\n          <div className=\"stats\">\r\n      <span className=\"date\">{parseDate(date)}</span>\r\n            \r\n          </div>\r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string,\r\n  url: PropTypes.string.isRequired,\r\n  headerImage: PropTypes.string,\r\n  headerBackgroundColor: PropTypes.string,\r\n  description: PropTypes.string.isRequired,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nCardHeader.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  headerImage: PropTypes.string,\r\n  headerBackgroundColor: PropTypes.string,\r\n};\r\n\r\nCard.defaultProps = {\r\n  headerImage: '',\r\n  tags: [],\r\n  date: '',\r\n  headerBackgroundColor: '',\r\n  title:'',\r\n};\r\n\r\nexport default Card;\r\n","// s = Small Square (90×90)\r\n// b = Big Square (160×160)\r\n// t = Small Thumbnail (160×160)\r\n// m = Medium Thumbnail (320×320)\r\n// l = Large Thumbnail (640×640)\r\n// h = Huge Thumbnail (1024×1024)\r\nconst defaultPicture = 'M795H8A.jpg';\r\n\r\nconst parseImgur = (rawImage, size = 'large') => {\r\n  if (!rawImage) {\r\n    return `https://i.imgur.com/${defaultPicture}`;\r\n  }\r\n\r\n  const mapping = {\r\n    'small-square': 's',\r\n    'big-square': 'b',\r\n    small: 't',\r\n    medium: 'm',\r\n    large: 'l',\r\n    huge: 'h',\r\n  };\r\n\r\n  // Don't resize the png image\r\n  // as there is a transparent bug in imgur\r\n  if (rawImage.match('(png)|(gif)')) {\r\n    // Prevent double http url\r\n    if (rawImage.match('http')) {\r\n      return rawImage;\r\n    }\r\n    return `https://i.imgur.com/${rawImage}`;\r\n  }\r\n\r\n  const resizedImage = rawImage.replace(/(.*)\\.(.*)/, `$1${mapping[size]}.$2`);\r\n  // Prevent double http url\r\n  if (resizedImage.match('http')) {\r\n    return resizedImage;\r\n  }\r\n  return `https://i.imgur.com/${resizedImage}`;\r\n};\r\n\r\nconst parseTitle = (title, text) => `title=\"${title || text}\"`;\r\n\r\nconst parseImageTag = ({ href, title, text }) => `<img class=\"lozad d-block mx-auto\" data-src=${parseImgur(\r\n  href,\r\n  'large',\r\n)} ${parseTitle(title, text)} />`;\r\n\r\nconst getGalleryImage = ({ href, title, text }) => `<a data-fancybox=\"gallery\" href=\"${parseImgur(\r\n  href,\r\n  'huge',\r\n)}\">${parseImageTag({ href, title, text })}</a>`;\r\n\r\nmodule.exports = {\r\n  parseImgur,\r\n  parseImageTag,\r\n  getGalleryImage,\r\n};\r\n"],"sourceRoot":""}